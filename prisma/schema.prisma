// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider= "postgresql"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

// For Local Development
// datasource db {
//   provider = "sqlite"
//   url      = "file:./dev.db"
// }

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String   @unique
  emailVerified DateTime?
  image         String?
  password      String
  hosting       Potluck[] @relation(name: "PotluckHost")
  attending     Potluck[] @relation(name: "PotluckAttendees")
  bringing      Dish[]
}

model Potluck {
  id          String   @id @default(uuid())
  name        String
  date        DateTime
  location    String
  description String
  hostId      String
  host        User     @relation(name: "PotluckHost", fields: [hostId], references: [id])
  attendees   User[]  @relation(name:"PotluckAttendees")
  dishes      Dish[]  
}

model Dish {
  id          String   @id @default(uuid())
  type        String
  quantity    Int     @default(1)
  suggestion  String?
  actual      String?

  potluckId   String
  potluck     Potluck  @relation(fields: [potluckId], references: [id])
  attendeeId     String?
  attendee       User?    @relation(fields: [attendeeId], references: [id])
}